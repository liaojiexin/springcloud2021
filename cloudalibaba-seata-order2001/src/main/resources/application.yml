server:
  port: 2001

spring:
  application:
    name: seata-order-service
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource            # 当前数据源操作类型
    driver-class-name: com.mysql.cj.jdbc.Driver              # mysql驱动包
    url: jdbc:mysql://localhost:3306/springcloud2021?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: 201314
  cloud:
    nacos:
      discovery:
        #nacos注册中心
        server-addr: localhost:8848
#    alibaba:
#      seata:
#        tx-service-group: default_tx_group

mybatis:
  mapperLocations: classpath:mapper/*.xml
  #统一实体类放在com.liaojiexin.entity下面，这样mapper.xml文件中的parameterType和resultType可以直接写实体类的名称，不用加上前面的com.liaojiexin.entity
  typeAliasesPackage: com.liaojiexin.springcloud.entity

management:
  endpoints:
    web:
      exposure:
        include: "*"


# seata配置
seata:
  # 是否开启seata，默认true
  enabled: true
  # Seata 应用编号，默认为 ${spring.application.name}
  application-id: ${spring.application.name}
  # 获取事务分组(服务启动时加载配置) spring/springboot可配置在yml、properties中，对应值"default_tx_group"即为事务分组名
  tx-service-group: default_tx_group
  # 服务配置项
  service:
    # 虚拟组和分组的映射
    vgroup-mapping:
      default_tx_group: default
    # 分组和 Seata 服务的映射
    grouplist:
      default: 127.0.0.1:8091
#  config:
#    type: nacos
#    nacos:
#      # 需要 server 端(registry.config)中配置保持一致
#      namespace: c18b9158-bcf3-4d5a-b78b-f02bc8a19353
#      server-addr: localhost:8848
#      group: SEATA_GROUP
#      username: nacos
#      password: nacos
  registry:
    type: nacos
    nacos:
      # 这里的名字一定要和 seata 服务端的名称相同，默认是 seata-server
      application: seata-server
      # 需要与 server 端(registry.config)中配置保持一致
      group: DEFAULT_GROUP
#      namespace: c18b9158-bcf3-4d5a-b78b-f02bc8a19353
      server-addr: localhost:8848
      username: nacos
      password: nacos

